pipeline {
    agent any

    environment {
        MAVEN_HOME = '/usr/share/maven'                   // Path to Maven installation
        SONAR_HOST_URL = 'http://10.0.2.15:9000'          // SonarQube server URL
        SONAR_PROJECT_KEY = 'foyer'                       // SonarQube project key
        DOCKER_HUB_REPO = 'wissal005/foyer_backend'       // Docker Hub repository
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'wissal', url: 'https://github.com/dhaouzeineb/tp-foyer.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    sh "${MAVEN_HOME}/bin/mvn clean install"
                }
            }
        }

        stage('Mockito&Junit') {
            steps {
                sh"mvn test"
            }
        }

        stage('Run SonarQube Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonar', variable: 'SONAR_TOKEN')]) {
                    script {
                        sh "${MAVEN_HOME}/bin/mvn sonar:sonar -Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_TOKEN}"
                    }
                }
            }
        }

        stage('Publish Code Coverage') {
            steps {
                script {
                    sh "${MAVEN_HOME}/bin/mvn jacoco:report"
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: 'target/', allowEmptyArchive: true
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_HUB_REPO}:latest ."
                }
            }
        }

       stage('Push Docker Image') {
           steps {
                    withCredentials([usernamePassword(credentialsId: 'dockerHubToken', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD')]) {
               script {
                   sh "docker login -u $DOCKER_USER -p $DOCKER_PASSWORD"
                   sh "docker push wissal005/foyer_backend:latest"
            }
        }
    }
}

        stage('Deploy to Nexus') {
            steps {
                echo 'Deploying to Nexus...'
                withCredentials([usernamePassword(credentialsId: 'nexus-credentials-id', usernameVariable: 'NEXUS_USERNAME', passwordVariable: 'NEXUS_PASSWORD')]) {
                    sh "${MAVEN_HOME}/bin/mvn deploy -DskipTests -DaltDeploymentRepository=deploymentRepo::default::http://$NEXUS_USERNAME:$NEXUS_PASSWORD@10.0.2.15:8081/repository/maven-snapshots/"
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Commands for deployment using docker-compose
                    sh 'docker compose down'
                    sh 'docker compose up -d'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}
